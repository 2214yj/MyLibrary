출처: 박응용(2019), "Do it! 점프 투 파이썬", 이지스퍼블리싱
해당 책을 학습하고 개인 학습용으로 정리한 내용입니다.

* 파이썬 문법 리마인딩을 위한 복습!! *
* <나혼자 파이썬>책과 안겹치는 내용 위주로 *

* format 함수를 사용한 포매팅
인덱스 방법과 이름 지정 방법을 혼용해서 사용 가능
ex) print("I ate {0} apples. so I was sick for {days} days.".format(10, day=3))

왼쪽 정렬(:<), 오른쪽 정렬(:>), 가운데 정렬(:^), 공백 대신 문자로 채우기(:문자<)(:문자>)(:문자^) 옵션 설정 가능
ex) print("{0:>10}".format("hi"))   =>  '        hi'
ex) print("{0:=^10}".format("hi"))  =>  '====hi===='

소수점 표현하기
ex) print("{0:10.4f}".format(y))    =>  '    3.4213'

* 문자열 포매팅(파이썬 3.6버전부터 가능)
문자열 앞에 f 접두사를 붙이면 f 문자열 포매팅 기능 사용 가능.
f포매팅은 위에서 생성한 변수를 참조할 수 있음. 또한 표현식을 지원.
ex) f'나는 내년이면 {age+1}살이 된다.'
ex) f'{"hi":>10}    =>  '        hi'

* 문자열 바꾸기
문자열.replace(문자열1,문자열2)  =>  문자열 안의 문자열1을 문자열2로 치환

* 문자열 나누기
문자열.split(구분자)  =>  구분자를 지정하지 않으면 공백을 기준으로 문자열 나눔

* 딕셔너리 만들 때 주의사항
딕셔너리의 key는 고유한 값이므로 중복되는 key 값을 설정해 놓으면 하나를 제외한 나머지 것들이 모두 무시됨
또한 key로 리스트는 쓸 수 없지만 튜플은 가능하다. 리스트는 그 값이 변할 수 있기 떄문에 key로 쓸 수 없다.

* 딕셔너리 관련 함수
딕셔너리 이름.items() : key와 value의 쌍을 튜플로 묶은 값을 객체로 돌려줌.
딕셔너리 이름.clear() : 딕셔너리 안의 모든 요소를 삭제. {} 상태가 됨.
딕셔너리 이름.get(값, 디폴트값) : 디폴트 값을 설정하면 key 값이 없을 경우 미리 정해 둔 디폴트 값을 대신 가져옴.

* 집합 자료형
집합 자료형은 set() 함수를 통해 만들 수 있음. {} 괄호 사용.
집합 자료형은 중복을 허용하지 않으며 순서가 없음. => 중복을 제거하기 위한 필터 역할로 종종 사용됨!
집합이름.add(값) : 값 1개 추가
집합이름.update(값 여러개 추가하기) : 값 여러개 추가
집합이름.remove(특정값) : 특정값 제거

* 변수를 만드는 여러 가지 방법
a,b = ('python', 'life')
(a,b) = 'python', 'life'    //튜플은 괄호를 생략 가능
[a,b] = ['python', 'life']
a = b = 'python'

=> 위 방법을 사용해서 두 변수의 값을 간단히 바꾸기 가능
ex) a, b = b, a

* print( ,end=" ")  //매개변수 end를 넣어 주면 한 줄의 끝을 end값으로 지정함.

** 리스트 내포 사용하기
[표현식 for 항목 in 바복 가능 객체 if 조건]
for문을 중첩해서도 사용 가능 (문법은 책 참고)
ex) result = [num * 3 for num in a]     //리스트 요소들을 세제곱하는 코드
ex) result - [num * 3 for num in a if num % 2 == 0] //리스트 요소들 중 짝수인 것들만 세제곱하는 코드















