출처: 김다정(2021), "React.js,스프링 부트,AWS로 배우는 웹 개발 101", 에이콘
해당 책을 학습하고 개인 학습용으로 정리한 내용입니다.

1.1 Todo 웹 애플리케이션
-Todo 웹 애플리 케이션의 기본 기능: Todo 생성,리스트,수정,삭제,회원가입,로그인,로그아웃
-실제 프로덕션에서 애플리케이션을 운영하는 데 필요한 기술과 애플리케이션의 스케일링에 몇가지 기술을 구현할 예정 (EX. 로드 밸런서, 오토 스케일링 그룹, 도메인 등록 및 HTTPS 설정 등)
-사용 기술:
1. HTML/CSS/React.js: 프론트엔드 애플리케이션 개발에 사용.
2. 스프링 부트: 백엔드 애플리케이션 개발에 사용.
3. AWS: 프론트엔드와 백엔드 애플리케이션이 실행될 프로덕션 환경을 구축하는 데 사용.


1.2 배경 지식
1.2.1 하이퍼텍스트 트랜스퍼 프로토콜(HTTP)
클라이언트와 서버는 HTTP 요청과 응답을 통해 통신.
HTTP 요청에는 송신자의 다양한 정보가 담겨 있다. HTTP 요청에는 메서드(GET,POST,PUT,DELETE ...)를 지정할 수 있다.
HTTP 응답도 여러가지 정보를 담고 있다. HTTP 응답에 코드(200,403,404 ...)를 함께 보내어 사용자 요청이 어떻게 처리됐는지 알 수 있다.
HTTP 응답의 Content-Type은 응답의 미디어 타입을 의미한다. 또한 서버 애플리케이션은 보통 HTTP 응답 바디에 요청 처리 결과를 보낸다.

1.2.2 JSON(JavaScript Object Notation)
JSON은 키-값의 형태로 오프젝트를 표현한 문자열.
애플리케이션에서 저장 또는 전송을 위해 메모리상의 오브젝트를 다른 형태로 변환하는 작업을 직렬화(serialization), 그 반대 작업을 역직렬화(deserialzation)라고 한다.
JSON에서 자료형 표현 방법(Boolean: true/false, 숫자: N, 문자열: "String", 오브젝트: {키:값}, 배열: ["값"])

1.2.3 서버
서버란 소켓을 열고 클라이언트가 연결할 때까지 무한 대기하며 기다리고 클라이언트가 연결하면 해당 클라이언트 소켓에서 요청을 받아와 수행하고 응답을 작성해 전달한다.

1.2.4 정적 웹 서버
정적 웹 서버란 리소스 파일을 리턴하는 서버. 정적 웹 서버의 예: Nginx,Apache ...

1.2.5 동적 웹 서버
동적 웹서버는 요청을 처리한 후 처리한 결과에 따라 응답 바디를 재구성하거나 HTML 템플릿 파일에 결과를 대체해 보낸다.
각 요청과 요청 매개변수에 따라 로직을 작성해야 한다.
자바 프로그램 중 웹 서버 구현(소켓 프로그래밍, HTTP 파싱, 스레드 풀 관리 등)을 도와주는 서블릿 엔진 (EX. 톰캣)

1.2.6 자바 서블릿 컨테이너/엔진
개발자들은 서블릭 엔진에게 자기가 개발한 비즈니스 로직을 알려줘야 한다. 이때 서블릿 엔진이 이해할 수 있는 형태로 클래스 파일을 작성해야 한다.
서블릿 엔진이 이해할 수 있는 클래스란 javax.servlet.http.HttpServlet의 상속받는 서브 클래스를 의미한다.
스프링 부트도 내부적으로는 서블릿 엔진을 위해 서블릿을 상속 및 구현한다.