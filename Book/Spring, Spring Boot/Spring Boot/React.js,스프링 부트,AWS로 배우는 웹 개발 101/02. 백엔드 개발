출처: 김다정(2021), "React.js,스프링 부트,AWS로 배우는 웹 개발 101", 에이콘
해당 책을 학습하고 개인 학습용으로 정리한 내용입니다.

2.1 백엔드 개발 환경 설정
2.1.3 스프링 프레임워크와 의존성 주입
스프링이란 오픈소스의 경량 프레임워크. '경량' 프레임워크란 보통 메모리나 CPU 자원이 많이 들지 않거나 사용이 쉽고 간편한 경우를 경량 프레임워크라고 지칭한다.
스프링 프레임워크에는 여러가지 컴포넌트가 존재한다. 의존성 주입 이외에도 스프링 AOP, 스프링 ORM, 스프링 웹 등 여러 방면에서 개발을 돕는 프레임워크를 제공한다.

의존성 주입이란 클래스가 의존하는 다른 클래스들을 외부에서 주입시킨다는 뜻이다. 이를 구현하는 방법에는 생성자를 이용해 주입하는 방법과 Setter를 이용해 주입하는 방법이 있다.
의존성 주입을 전문적으로 해주는 것이 의존성 주입 컨테이너이고 그 의존성 주입 컨테이너 중 하나가 바로 스프링 프레임워크이다.
관리해야 하는 오브젝트가 많아질수록 오브젝트를 생성하는 데 할애하는 시간도 늘어나므로 의존성 주입 컨테이너의 도움을 받아 오브젝트 생성과 관리를 효율적으로 할 수 있다.
스프링 프레임워크를 이용하면 어노테이션이나 XML 또는 자바 코드를 이용해 오브젝트(Bean) 간의 의존성을 명시할 수 있다. 스프링 프레임워크의 IoC 컨테이너라는 자바 오브젝트를 이용해 오브젝트를 생성 및 관리해준다.
스프링 프레임워크는 애플리케이션 기반, XML 기반, 자바 기반의 설정을 제공한다.

스프링 부트를 이용하면 스탠드얼론 프로덕션급의 스프링 기반 애플리케이션을 쉽게 구동할 수 있다. 스프링 부트는 개발자가 최소의 설정을 할 수 있도록 많은 부분을 자동으로 설정해 준다.

2.1.4 스프링 프레임워크와 디스패처 서블릿
스프링 부트는 어노테이션과 서브 클래스를 적절히 이용해 개발자들이 반복 작업과 코드를 최소화할 수 있도록 도와준다.
스프링 부트는 DispatcherServlet이라는 서블릿 서브 클래스를 이미 구현하고 있다. 따라서 개발자가 서블릿 클래스를 작성하지 않아도 된다.
대신 개발자는 스프링 부트가 제공하는 어노테이션과 인터페이스를 이용해 스프링이 비즈니스 로직을 이해할 수 있도록 내부 기능을 구현하면 된다.

2.1.6 메인 메서드와 @SpringBootApplication


